<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<connectionStrings>
<<<<<<< HEAD
		<add name="base_datosEntities" connectionString="metadata=res://*/BuenosAiresEDM.csdl|res://*/BuenosAiresEDM.ssdl|res://*/BuenosAiresEDM.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=PCROBERTO\SQLEXPRESS;initial catalog=base_datos;user id=sa;password=123;trustservercertificate=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
	</connectionStrings>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8"/>
  </system.web>
  <system.serviceModel>
	  <services>
		<service name="BuenosAires.ServiceLayer.WsAnwo">
			<endpoint address=""
			  binding="basicHttpBinding"
			  contract="BuenosAires.ServiceLayer.IWsAnwo" />
			<endpoint address="mex"
				binding="mexHttpBinding"
			  contract="IMetadataExchange" />
		</service>
	  </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- Para evitar revelar información de los metadatos, establezca los valores siguientes en false antes de la implementación -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- Para recibir detalles de las excepciones en los errores para la depuración, establezca el siguiente valor en true. Para no revelar información sobre las excepciones establézcalo en false antes de la implementación -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
	  <client>
		  <endpoint address="http://localhost:50397/WsAutenticacion.svc"
					binding="basicHttpBinding"
					contract="WsAutenticacionReference.IWsAutenticacion"
					name="WsAutenticacion1" />
		  <endpoint address="http://otroservidor/WsAutenticacion.svc"
					binding="basicHttpBinding"
					contract="WsAutenticacionReference.IWsAutenticacion"
					name="WsAutenticacion2" />
	  </client>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        Para examinar el directorio raíz de la aplicación web durante la depuración, establezca el valor siguiente en true.
        Establézcalo en false antes de la implementación para evitar revelar información sobre la carpeta de aplicación web.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
=======
		<add name="base_datosEntities"
    connectionString="…"
    providerName="System.Data.EntityClient" />
	</connectionStrings>
>>>>>>> d772fec1aafe8ceea6de132fbf789858e79fd9fe

	<appSettings>
		<add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
	</appSettings>

	<system.web>
		<compilation debug="true" targetFramework="4.8" />
		<httpRuntime targetFramework="4.8"/>
	</system.web>

	<system.serviceModel>

		<!-- ==========================
         1) Declaración de tu servicio SOAP
         ========================== -->
		<services>
			<service name="BuenosAires.ServiceLayer.WsGuiaDespacho"
      behaviorConfiguration="ServiceBehavior">
				<!-- Endpoint SOAP para consumo WinForms -->
				<endpoint
     address=""
     binding="basicHttpBinding"
     contract="BuenosAires.ServiceLayer.IWsGuiaDespacho" />
				<!-- Endpoint para metadata (wsdl) -->
				<endpoint
     address="mex"
     binding="mexHttpBinding"
     contract="IMetadataExchange" />
			</service>
		</services>

		<!-- ==========================
         2) Tus behaviors existentes
         (puedes dejarlos sin tocar)
         ========================== -->
		<behaviors>
   <serviceBehaviors>
    <behavior name="ServiceBehavior">
     <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
    <behavior name="">
     <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>

		<!-- ==========================
         3) Mapeo de protocolos y hosting
         (dejalo tal cual lo tienes)
         ========================== -->
		<protocolMapping>
			<add binding="basicHttpsBinding" scheme="https" />
		</protocolMapping>
		<serviceHostingEnvironment
   aspNetCompatibilityEnabled="true"
   multipleSiteBindingsEnabled="true" />

		<!-- ==========================
         4) Endpoints de cliente 
         (para consumir otros servicios WCF)
         Aquí añadimos tu nuevo endpoint de WsGuiaDespacho
         ========================== -->
		<client>
			<!-- tus endpoints existentes -->
			<endpoint
    address="http://localhost:50397/WsAutenticacion.svc"
    binding="basicHttpBinding"
    contract="WsAutenticacionReference.IWsAutenticacion"
    name="WsAutenticacion1" />
			<endpoint
    address="http://otroservidor/WsAutenticacion.svc"
    binding="basicHttpBinding"
    contract="WsAutenticacionReference.IWsAutenticacion"
    name="WsAutenticacion2" />

			<!-- nuevo cliente para WsGuiaDespacho -->
			<endpoint
    address="http://localhost:50400/WsGuiaDespacho.svc"
    binding="basicHttpBinding"
    contract="WsGuiaDespachoReference.IWsGuiaDespacho"
    name="WsGuiaDespacho" />
		</client>

	</system.serviceModel>

	<system.webServer>
		<modules runAllManagedModulesForAllRequests="true"/>
		<directoryBrowse enabled="true"/>
	</system.webServer>
</configuration>

